{"version":3,"file":"static/js/667.55a8394a.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/summary/SummaryBox.module.scss?74b5","components/summary/SummaryBox.tsx","webpack://my-app/./src/components/summary/Summary.module.scss?2cd9","components/summary/Summary.tsx","components/chart/LineChart.tsx","components/chart/BarChart.tsx","webpack://my-app/./src/components/chart/Chart.module.scss?9244","components/chart/Chart.tsx","webpack://my-app/./src/components/tables/DashboardTables.module.scss?fef2","components/tables/DashboardTables.tsx","pages/Dashboard.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"summary__box\":\"SummaryBox_summary__box__epafO\",\"summary__box__wrapper\":\"SummaryBox_summary__box__wrapper__37FIg\",\"summary__box__icon\":\"SummaryBox_summary__box__icon__kw5Aj\",\"summary__box__info__amount\":\"SummaryBox_summary__box__info__amount__Wreds\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { IsummData as Props } from \"../../interfaces/IsummData\";\nimport { Icon } from \"@iconify/react\";\nimport Card from \"../UI/card/Card\";\nimport classes from \"./SummaryBox.module.scss\";\nconst SummaryBox: React.FC<{ item: Props }> = (props) => {\n  const { t } = useTranslation();\n  return (\n    <div className={classes.summary__box}>\n      <Card>\n        <div className={classes.summary__box__wrapper}>\n          <div className={classes.summary__box__icon}>\n            <Icon icon={props.item.icon} width=\"56\" />\n          </div>\n          <div className={classes.summary__box__info}>\n            <p>{t(props.item.text)}</p>\n            <div className={classes.summary__box__info__amount}>\n              <h4>{t(props.item.amount)}</h4>\n              <sup>{t(props.item.currency)}</sup>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default SummaryBox;\n","// extracted by mini-css-extract-plugin\nexport default {\"summary\":\"Summary_summary__t9usa\",\"summary__box\":\"Summary_summary__box__A+O8u\"};","import React from \"react\";\n\nimport SummaryBox from \"./SummaryBox\";\nimport { useTranslation } from \"react-i18next\";\nimport classes from \"./Summary.module.scss\";\nimport { IsummData } from \"../../interfaces/IsummData\";\n\nconst summaryData: IsummData[] = [\n  {\n    icon: \"akar-icons:shopping-bag\",\n    text: \"thisMonthSales\",\n    amount: \"salesAmount\",\n    currency: \"currency\",\n  },\n  {\n    icon: \"icon-park-outline:transaction-order\",\n    text: \"thisMonthOrders\",\n    amount: \"orderAmount\",\n    currency: \"\",\n  },\n  {\n    icon: \"jam:coin\",\n    text: \"thisMonthRevenue\",\n    amount: \"revenueAmount\",\n    currency: \"currency\",\n  },\n];\n\nfunction Summary() {\n  const { t } = useTranslation();\n  return (\n    <section className={classes.summary}>\n      <p className=\"subTitle\">{t(\"summary\")}</p>\n      <div className={classes.summary__box}>\n        {summaryData.map((item) => (\n          <SummaryBox key={item.text} item={item} />\n        ))}\n      </div>\n    </section>\n  );\n}\n\nexport default Summary;\n","import React from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Tooltip,\n  Legend\n);\n\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      // rtl: true,\n      // textDirection: \"rtl\",\n      labels: {\n        font: {\n          size: 20,\n          color: \"#fff\",\n        },\n      },\n    },\n  },\n};\n\ninterface Props {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: number[];\n    borderColor: string;\n    backgroundColor: string;\n  }[];\n}\nconst LineChart: React.FC<{ chartData: Props }> = (props) => {\n  return <Line data={props.chartData} options={options} />;\n};\n\nexport default LineChart;\n","import React, { useMemo } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ninterface IChartData {\n  labels: string[];\n  datasets: {\n    label: string;\n    data: number[];\n    backgroundColor: string;\n  }[];\n}\n\nconst BarChart: React.FC<{ chartData: IChartData; chartTitle: string }> = (\n  props\n) => {\n  const { chartTitle } = props;\n  const options = useMemo(\n    () => ({\n      responsive: true,\n      plugins: {\n        legend: {\n          position: \"center\" as const,\n        },\n        title: {\n          display: true,\n          text: chartTitle,\n        },\n      },\n    }),\n    [chartTitle]\n  );\n  return <Bar options={options} data={props.chartData} />;\n};\n\nexport default BarChart;\n","// extracted by mini-css-extract-plugin\nexport default {\"chart\":\"Chart_chart__BMLzg\",\"chart__wrapper\":\"Chart_chart__wrapper__6rKtw\",\"charts__container\":\"Chart_charts__container__IdPvj\",\"charts__wrapper\":\"Chart_charts__wrapper__UOfP8\"};","import React, { useState } from \"react\";\nimport { faker } from \"@faker-js/faker\";\n\nimport { useTranslation } from \"react-i18next\";\nimport LineChart from \"./LineChart\";\nimport BarChart from \"./BarChart\";\nimport classes from \"./Chart.module.scss\";\nimport data from \"../../constants/data\";\nimport Card from \"../UI/card/Card\";\n\nconst SaleChart = () => {\n  const { t } = useTranslation();\n  const labels = data.revenueByMonths.labels.map((month) => t(month));\n  const [userData] = useState({\n    labels,\n    datasets: [\n      {\n        label: t(\"summaryOfSale\"),\n        data: data.revenueByMonths.data,\n        borderColor: \"#ee384e\",\n        backgroundColor: \"#3c4b6d\",\n      },\n    ],\n  });\n\n  const [orderData] = useState({\n    labels,\n    datasets: [\n      {\n        label: t(\"summaryOfOrders\"),\n        data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      },\n    ],\n  });\n\n  const [revenueData] = useState({\n    labels,\n    datasets: [\n      {\n        label: t(\"summaryOfRevenue\"),\n        data: labels.map(() => faker.datatype.number({ min: 0, max: 1000 })),\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n      },\n    ],\n  });\n\n  return (\n    <section className={classes.chart}>\n      <p className=\"subTitle\">{t(\"quickAnalysis\")}</p>\n      <div className={classes.charts__container}>\n        <div className={classes.charts__wrapper}>\n          <Card>\n            <div className={classes.chart__wrapper}>\n              <BarChart\n                chartData={orderData}\n                chartTitle={`${t(\"summaryOfOrders\")}`}\n              />\n            </div>\n          </Card>\n          <Card>\n            <div className={classes.chart__wrapper}>\n              <BarChart\n                chartData={revenueData}\n                chartTitle={`${t(\"summaryOfRevenue\")}`}\n              />\n            </div>\n          </Card>\n        </div>\n        <Card>\n          <div className={classes.chart__wrapper}>\n            <LineChart chartData={userData} />\n          </div>\n        </Card>\n      </div>\n    </section>\n  );\n};\n\nexport default SaleChart;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"DashboardTables_table__0e0IP\",\"table__child\":\"DashboardTables_table__child__6G+j7\",\"table__top__customers\":\"DashboardTables_table__top__customers__ihTdD\",\"table__latest__orders\":\"DashboardTables_table__latest__orders__OEtW2\",\"table__title\":\"DashboardTables_table__title__69NDz\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./DashboardTables.module.scss\";\nimport { useTranslation } from \"react-i18next\";\nimport CustomTable from \"./customTable/CustomTable\";\nimport data from \"../../constants/data\";\n\nconst Table = () => {\n  const { t } = useTranslation();\n  return (\n    <section className={classes.table}>\n      <div\n        className={`${classes.table__top__customers} ${classes.table__child}`}\n      >\n        <div className={classes.table__title}>\n          <p className=\"subTitle\">{t(\"topCustomers\")}</p>\n          <Link to=\"/\">{t(\"viewAll\")}</Link>\n        </div>\n        <CustomTable\n          headData={data.topCustomers.head}\n          bodyData={data.topCustomers.body}\n        />\n      </div>\n      <div\n        className={`${classes.table__latest__orders} ${classes.table__child}`}\n      >\n        <div className={classes.table__title}>\n          <p className=\"subTitle\">{t(\"latestTransaction\")}</p>\n          <Link to=\"/\">{t(\"viewAll\")}</Link>\n        </div>\n        <CustomTable\n          headData={data.latestOrders.header}\n          bodyData={data.latestOrders.body}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Summary from \"../components/summary/Summary\";\nimport SaleChart from \"../components/chart/Chart\";\nimport DashboardTables from \"../components/tables/DashboardTables\";\n\nfunction Dashboard() {\n  const { t } = useTranslation();\n  return (\n    <section>\n      <h2 className=\"title\">{t(\"dashboard\")}</h2>\n      <Summary />\n      <SaleChart />\n      <DashboardTables />\n    </section>\n  );\n}\n\nexport default Dashboard;\n"],"names":["props","t","useTranslation","_jsx","className","classes","summary__box","children","Card","_jsxs","summary__box__wrapper","summary__box__icon","Icon","icon","item","width","summary__box__info","text","summary__box__info__amount","amount","currency","summaryData","map","SummaryBox","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Tooltip","Legend","options","responsive","plugins","legend","labels","font","size","color","Line","data","chartData","BarElement","Title","chartTitle","useMemo","position","title","display","Bar","SaleChart","revenueByMonths","month","userData","useState","datasets","label","borderColor","backgroundColor","orderData","faker","datatype","number","min","max","revenueData","BarChart","concat","LineChart","Table","Link","to","CustomTable","headData","topCustomers","head","bodyData","body","latestOrders","header","Summary","DashboardTables"],"sourceRoot":""}