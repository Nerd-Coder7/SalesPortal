{"version":3,"file":"static/js/722.9e7b3e32.chunk.js","mappings":"kLACA,SAAgB,OAAS,0B,aCYzB,MAwBA,EAxBmCA,IAGjC,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MAEd,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAS,aAAAC,OAAeC,EAAQC,eAAgBC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,SAAOC,QAAQ,WAAUF,SAAEP,EAAE,eAC7BQ,EAAAA,EAAAA,KAAA,UACEE,KAAK,WACLP,UAAWE,EAAQM,OACnBC,GAAG,WACHC,SAAUd,EAAMc,SAASN,SAExBR,EAAMe,aAAaC,KAAI,CAACC,EAAMC,KAC7BT,EAAAA,EAAAA,KAAA,UAAsCU,MAAOF,EAAKE,MAAMX,SACrDP,EAAE,GAADI,OAAIY,EAAKG,SAAQ,GAAAf,OADLY,EAAKG,MAAQF,UAK7B,E,cCvBV,MAGMG,EAAkB,CACtB,CAAED,MAAO,MAAOD,MAAO,OACvB,CAAEC,MAAO,UAAWD,MAAO,WAC3B,CAAEC,MAAO,WAAYD,MAAO,YAC5B,CAAEC,MAAO,SAAUD,MAAO,WA8E5B,QA5EA,WACE,MAAM,EAAElB,IAAMC,EAAAA,EAAAA,OACPoB,EAAUC,IAAeC,EAAAA,EAAAA,UAASH,EAAgB,GAAGF,QACtD,KAAEM,EAAI,MAAEC,EAAK,QAAEC,IAAYC,EAAAA,EAAAA,GAXjC,0FAYA,IAAIC,EACAC,EAYJ,GAJIH,IACFE,GAAgBpB,EAAAA,EAAAA,KAACsB,EAAAA,EAAc,KAG7BL,EAAO,CAGT,OAAQJ,GACN,IAAK,UAGL,IAAK,WAGL,IAAK,SACHQ,EAAoB,OAARE,EAAAA,SAAQ,IAARA,EAAAA,QAAQ,EAARA,EAAAA,GAAUC,QAAQhB,GAASA,EAAKiB,WAAaZ,IACzD,MACF,QACEQ,EAAYE,EAAAA,GAGhBH,GACEpB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAW,CAACC,SAAUC,EAAAA,GAAgBC,SAAUR,EAAWS,MAAO,IAEvE,CAEA,IAAKZ,GAAWF,EAAM,CACpB,OAAQH,GACN,IAAK,UAGL,IAAK,WAGL,IAAK,SACHQ,EAAgB,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,QAAQhB,GAASA,EAAKiB,WAAaZ,IACrD,MACF,QACEQ,EAAYL,EAGhBI,GACEpB,EAAAA,EAAAA,KAAC0B,EAAAA,EAAW,CACVK,iBAAkBlB,EAClBc,SAAUC,EAAAA,GACVC,SAAUR,EACVS,MAAO,IAGb,CAEA,OACEpC,EAAAA,EAAAA,MAAA,WAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIL,UAAU,QAAOI,SAAEP,EAAE,eACzBQ,EAAAA,EAAAA,KAACgC,EAAQ,CACP1B,aAAcM,EACdP,SA7DN,SAA+B4B,GAC7BnB,GAAY,IAAMmB,EAAEC,OAAOxB,OAC7B,IA6DKU,IAGP,C","sources":["webpack://my-app/./src/components/UI/dropdown/Dropdown.module.scss?23eb","components/UI/dropdown/Dropdown.tsx","pages/Products.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"select\":\"Dropdown_select__kb0sq\"};","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport classes from \"./Dropdown.module.scss\";\n\ntype TOptionItem = {\n  label: string;\n  value: string;\n};\n\ninterface Props {\n  dropdownData: TOptionItem[];\n  onChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n}\nconst Dropdown: React.FC<Props> = (props) => {\n  //   const selectRef = useRef<HTMLSelectElement | null>(null);\n\n  const { t } = useTranslation();\n\n  return (\n    <div className={` subTitle ${classes.form__control}`}>\n      <label htmlFor=\"category\">{t(\"category\")}</label>\n      <select\n        name=\"category\"\n        className={classes.select}\n        id=\"category\"\n        onChange={props.onChange}\n      >\n        {props.dropdownData.map((item, index) => (\n          <option key={`${item.label + index}`} value={item.value}>\n            {t(`${item.label}`)}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport useFetch from \"../hook/useFetch\";\nimport CustomTable from \"../components/tables/customTable/CustomTable\";\nimport { IProductsTable } from \"../interfaces/Itable\";\nimport { products, productsHeader } from \"../constants/tables\";\nimport LoadingSpinner from \"../components/UI/loadingSpinner/LoadingSpinner\";\nimport Dropdown from \"../components/UI/dropdown/Dropdown\";\nimport useDataFetch from \"../hook/useDataFetch\";\n\nconst url =\n  \"https://admin-panel-79c71-default-rtdb.europe-west1.firebasedatabase.app/products.json\";\n\nconst dropdownOptions = [\n  { label: \"all\", value: \"all\" },\n  { label: \"digital\", value: \"digital\" },\n  { label: \"clothing\", value: \"clothing\" },\n  { label: \"beauty\", value: \"beauty\" },\n];\nfunction Products() {\n  const { t } = useTranslation();\n  const [selected, setSelected] = useState(dropdownOptions[0].value);\n  const { data, error, loading } = useDataFetch<IProductsTable[]>(url);\n  let productsTable;\n  let tableData: IProductsTable[] | undefined;\n\n\n  function selectedChangeHandler(e: React.ChangeEvent<HTMLSelectElement>) {\n    setSelected(() => e.target.value);\n  }\n\n \n  if (loading) {\n    productsTable = <LoadingSpinner />;\n  }\n\n  if (error) {\n    //if fetch has error:\n    //select data from local file (\"../constants/tables.ts\")\n    switch (selected) {\n      case \"digital\":\n        tableData = products?.filter((item) => item.category === selected);\n        break;\n      case \"clothing\":\n        tableData = products?.filter((item) => item.category === selected);\n        break;\n      case \"beauty\":\n        tableData = products?.filter((item) => item.category === selected);\n        break;\n      default:\n        tableData = products;\n    }\n\n    productsTable = (\n      <CustomTable headData={productsHeader} bodyData={tableData} limit={10} />\n    );\n  }\n\n  if (!loading && data) {\n    switch (selected) {\n      case \"digital\":\n        tableData = data?.filter((item) => item.category === selected);\n        break;\n      case \"clothing\":\n        tableData = data?.filter((item) => item.category === selected);\n        break;\n      case \"beauty\":\n        tableData = data?.filter((item) => item.category === selected);\n        break;\n      default:\n        tableData = data;\n    }\n\n    productsTable = (\n      <CustomTable\n        selectedCategory={selected}\n        headData={productsHeader}\n        bodyData={tableData}\n        limit={10}\n      />\n    );\n  }\n\n  return (\n    <section>\n      <h2 className=\"title\">{t(\"products\")}</h2>\n      <Dropdown\n        dropdownData={dropdownOptions}\n        onChange={selectedChangeHandler}\n      />\n      {productsTable}\n    </section>\n  );\n}\n\nexport default Products;\n"],"names":["props","t","useTranslation","_jsxs","className","concat","classes","form__control","children","_jsx","htmlFor","name","select","id","onChange","dropdownData","map","item","index","value","label","dropdownOptions","selected","setSelected","useState","data","error","loading","useDataFetch","productsTable","tableData","LoadingSpinner","products","filter","category","CustomTable","headData","productsHeader","bodyData","limit","selectedCategory","Dropdown","e","target"],"sourceRoot":""}